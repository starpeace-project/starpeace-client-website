// import _ from 'lodash';
// import { DateTime }  from 'luxon';

// export default class MutexObject {
//   locked: boolean = false;
//   as_of: DateTime | null = null;
//   value: any | null = null;
//   listeners: Array<any> = [];

//   has_value (): boolean {
//     return !!this.value;
//   }

//   attach_listener (listener: () => void): void {
//     if (_.isFunction(listener)) {
//       this.listeners.push(listener);
//     }
//   }

//   attempt_lock (): boolean {
//     if (this.locked) {
//       return false;
//     }
//     this.locked = true;
//     return true;
//   }
//   release_lock () {
//     if (this.locked) {
//       this.locked = false;
//     }
//   }

//   update (value: any | null): void {
//     this.value = value;
//     this.as_of = DateTime.now();
//   }

//   static within_minutes (time: DateTime, minutes: number) {
//     return !!time && DateTime.now() < time.plus({ minutes: minutes });
//   }
// }
